function [truecounts,cor]=deadcor(counts,monitor,time,deadtime)% DEADCOR - Detector deadtime correction%% Usage:  [truecounts,cor]=deadcor(counts,monitor,time,deadtime)%% DEADCOR corrects the measured intensity for the% effects of detector and electronics dead time.% Strictly speaking the correction is only valid% for a proportional counter measuring a constant% intensity (e.g. a synchrotron in multi-bunch mode,% but not a synchrotron in single-bunch mode). Note% that the input intensity must be an actual number of% counts, and not something proportional to intensity% (such as counts per monitor count).%% Input:  counts = measured counts (can be an array)%         monitor = monitor counts (can be array) (optional,%			use empty array [] if omitted)%         time = counting time per point (can be array)%         deadtime = measured dead time (microseconds)%% Output: truecounts = corrected number of counts%         cor = correction factor, use I(true)=I(meas)*cor%% Copyright 2000, Todd Hufnagel (hufnagel@jhu.edu)% Based on DEADTIME.FOR by Paul Zschack (ORNL/NSLS)% Reference: T.C. Hufnagel, Ph.D. thesis, Stanford University (1995).% TCH 6-8-94 Original version% TCH 5-2-00 Make monitor optional, change input list slightlycounts=counts(:);time=time(:);if (isempty(monitor))	monitor=ones(size(counts));else	monitor=monitor(:);enddeadtime=deadtime*1.0e-6;	% Deadtime in microsecondsdeadtime=deadtime;	% Deadtime in microsecondsrate=counts./time;		% Measured counting ratetrue=rate;			% Initial guess at true ratetemp=rate;notdone=[1:length(true)];	% Points that have not yet convergednotconv=[];			% Unconverged points (determined later)niter=0;			% Keep track of number of iterationswhile ~isempty(notdone)		% Iterate to find true count rate	temp(notdone)=rate(notdone).*exp(deadtime.*true(notdone));	del(notdone)=(true(notdone)-temp(notdone))./true(notdone);	j=find(abs(del(notdone))<=1e-5);	if ~isempty(j);		notdone(j)=[];	end	true(notdone)=temp(notdone);	niter=niter+1;%	if (niter/5000-floor(niter/5000)==0)	% This section for debugging%		niter%		max(del)%		j%	end	if (niter>20000)		notconv=notdone;	% No convergence				notdone=[];	end	endif (~isempty(notconv))	warning('Warning:  Convergence not achieved in deadtime correction at:')	notconvendtruecounts = true.*time;cor=truecounts./counts;%plot(truecounts./monitor);grid%xlabel('Point');ylabel('True count rate (counts/monitor)');%title('Deadtime corrected data');