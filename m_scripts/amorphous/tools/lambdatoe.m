function energy=lambdatoe(lambda,probe_flag)% LAMBDATOE - Convert from wavelength (in Å) to energy (in eV)%% Usage: energy = lambdatoe(lambda{,probe_flag})% % Calculates the energy of radiation, given the wavelength.% The calculation depends on the nature of the radiation,% which is specified via the global PROBE; PROBE=0 is% x-rays (the default), while PROBE=1 is electrons.%% Input:%   lambda = array of wavelengths (in Å)%   probe_flag = (optional) string to override the setting%                of PROBE. 'e'=electrons, 'x'=x-rays.%% Output:   %   energy = array of energies (in eV)%% See also: ETOLAMBDA, FHC% T. Hufnagel (hufnagel@jhu.edu) Johns Hopkins University% TCH 13-Aug-93 Changed output units from keV to eV% TCH 05-May-03 Comments added and constant updated% TCH 08-May-03 Added PROBE and conversion for electrons% Reference for electron wavelength: % D. B. Williams and C. B. Carter, "Transmission Electron Microscopy: % A Textbook for Materials Science" (Plenum, 1996).% Note that this routine corrects a typographical error in the book.global PROBEif isempty(PROBE)    PROBE=0;         % X-ray scattering is the defaultendif nargin<2         % User did not override PROBE   radiation=PROBE;else                % User did override PROBE    switch lower(probe_flag(1))        case 'e'    % Electrons            radiation=1;        case 'x'    % X-rays             radiation=0;        otherwise            error('Unknown value of probe_flag! (Should be ''e'' or ''x''.)')    endendswitch radiation    case 0          % x-rays        energy = 12398.4244./lambda;    case 1          % electrons            h=6.626e-34;    % Planck's constant (N m s)        mo=9.109e-31;   % Electron rest mass (kg)        c=2.998e8;      % Speed of light (m/s)        lambda=lambda*1e-10; % Convert wavelength to meters                a=1/c^2;        b=2*mo;        co=-(h.^2./lambda.^2);        energy=(-b+sqrt(b.^2-4.*a.*co))./(2.*a); % in J, only need positive solution        energy=energy./1.602e-19; % Convert energy to J (from eV)    otherwise        error('Unknown value of global PROBE! (Should be 0 for x-rays, 1 for electrons.)')end