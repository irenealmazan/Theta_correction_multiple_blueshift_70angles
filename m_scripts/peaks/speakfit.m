function speakfit(command) %  peakfit.m %  Created: 4-Mar-94 %  Author :  Sean M. Brennan (Bren@SLAC.stanford.edu)%  Mods.  :  5-3-94 change cursor procedure%            10-26-94 semilog plot incl. %            2-12-95 use findobj instead of userdata %         :  FIT_AREA global [area_total; area_peak1; area_peak2....%         :  FITFY    global [fit_total fit_peak1 fit_peak2...  6-28-96 AMglobal FITX FITDY FITFY FIT_LAMBDA FIT_AREA verbose PEAK_XPOS;verbose(1)=0; verbose(2)=1; if nargin == 0 	command = 'init';	verbose(3)=1;end if isstr(command) 	if strcmp(command,'init') 		pk_init;		pk_inivl;		ax = axes('pos',[0 0 .88 .3],'visible','off');	%  create text axis		axes('position',[0.1 0.3 .88 .65]);				% create figure axis		plot(FITX,FITDY,'+');		FIT_LAMBDA=[]; FIT_AREA=[];		PEAK_XPOS=[];		set(gcf,'WindowButtonMotionFcn','cursmode(''peakfit'')');	elseif strcmp(command,'new')		plot(FITX,FITDY,'+');		pk_inivl;		verbose(3)=1;		set(findobj(gcf,'tag','logbut'),'string','Log');		set(findobj(gcf,'tag','txt1'),'string','');     % remove area's		set(findobj(gcf,'tag','txt2'),'string','');		set(findobj(gcf,'tag','txt3'),'string','');		set(findobj(gcf,'tag','txt4'),'string','');		FIT_LAMBDA=[]; FIT_AREA=[];		PEAK_XPOS=[];	elseif strcmp(command,'logbut')		current= get(findobj(gcf,'tag','logbut'),'string');		if current(2) == 'i',			% as in linear			set(gca,'yscale','linear');			set(findobj(gcf,'tag','logbut'),'string','Log');			verbose(3)=1; % linear plot in leasqr		else			set(gca,'yscale','log');			set(findobj(gcf,'tag','logbut'),'string','Linear');			verbose(3)=2; % log plot in leasqr		end		axis('auto');	elseif strcmp(command,'fitbut')		action= get(findobj(gcf,'tag','fitbut'),'string');		if action(1) == 'F',		%Fit data 			set(findobj(gcf,'tag','fitbut'),'string','Stop');			verbose(4)= 0;			FIT_LAMBDA=[];			h=flipud(sort(findobj(gcf,'Style','edit')));  % gets handles of edit items			for j=1:16,				nogo=strcmp(get(h(j),'String'),'');				if nogo & rem(j,4),					if j<4, return; end					FIT_LAMBDA=FIT_LAMBDA(1:j-rem(j,4));					break; 				elseif nogo & ~rem(j,4)					FIT_LAMBDA(j)= 0;				else					FIT_LAMBDA(j)= str2num(get(h(j),'String'));				end			end			lam_len=length(FIT_LAMBDA)+2;			FIT_LAMBDA(lam_len-1)= str2num(get(h(17),'String'));			FIT_LAMBDA(lam_len)= str2num(get(h(18),'String'));			constrain=pk_gtcon(lam_len);			if max(constrain)~=0,				npts=length(FITX);				wt=ones(npts,1);				set(gcf,'Pointer','watch');tic;				[FITFY,FIT_LAMBDA,kvg,iter,corp,covp,covr,stdresid,Z,r2]= ...				leasqr(FITX,FITDY,FIT_LAMBDA,'pk_sqvt',.001,50,wt,constrain ...				,'pk_qvtdf');toc				set(gcf,'Pointer','arrow');			else				FITFY=pk_sqvt(FITX,FIT_LAMBDA);			end         chi2= chisqr(FITDY,FITFY,constrain,wt);%			parm_len= sum(1000 .*constrain);%			chi2= sum(((FITDY-FITFY).*wt).^2)/(npts-parm_len);			fprintf('Chisqr= %g\n',chi2);			total_area= trapz(FITX,FITFY);			s= sprintf('Total area= %-8.3g',total_area);			disp(s);			npeaks= floor(lam_len/4);			fred= axis;			axis([fred(1) fred(2) 0 fred(4)]);			hold on			col= ['c' 'r' 'g' 'b'];			for i=1:npeaks				base=(i-1)*4;				lam(1:4)= FIT_LAMBDA(base+1:base+4);				f=pk_svoigt(FITX,lam);				FITFY(:,1+i)=f;				if verbose(3)==1					plot(FITX,f,col(i));				else				    semilogy(FITX,f,col(i));				end				area(i)= trapz(FITX,f);				set(findobj(gcf,'tag',['txt' num2str(i)]),...				                'string',num2str(area(i)));			end			FIT_AREA=[total_area; area.'];			hold off			axis(fred);			for i=1:lam_len-2,				set(findobj(gcf,'tag',['ed' num2str(i)]),'String',num2str(FIT_LAMBDA(i)));			end			set(findobj(gcf,'tag','ed17'),'String',num2str(FIT_LAMBDA(lam_len-1)));					set(findobj(gcf,'tag','ed18'),'String',num2str(FIT_LAMBDA(lam_len)));			pk_tylam(FIT_LAMBDA);		else			verbose(4)= 1;		end		set(findobj(gcf,'tag','fitbut'),'string','Fit');	elseif strcmp(command,'curs')		cu_pos=get(gca,'CurrentPoint');	    xpos=cu_pos(1,1);		ypos=cu_pos(1,2);		if get(findobj(gcf,'tag','rb1'),'Value')==1			set(findobj(gcf,'tag','ed1'),'String',num2str(xpos));			set(findobj(gcf,'tag','ed2'),'String',num2str(ypos));			set(findobj(gcf,'tag','rb1'),'Value',0);			set(findobj(gcf,'tag','rb2'),'Value',1);		elseif get(findobj(gcf,'tag','rb2'),'Value')==1			if ~isempty(PEAK_XPOS),				fred= abs(xpos-PEAK_XPOS);				set(findobj(gcf,'tag','ed3'),'String',num2str(fred));				set(findobj(gcf,'tag','rb2'),'Value',0);				set(findobj(gcf,'tag','rb3'),'Value',1);				PEAK_XPOS=[];			else				PEAK_XPOS= xpos;			end		elseif get(findobj(gcf,'tag','rb3'),'Value')==1			set(findobj(gcf,'tag','ed5'),'String',num2str(xpos));			set(findobj(gcf,'tag','ed6'),'String',num2str(ypos));			set(findobj(gcf,'tag','rb3'),'Value',0);			set(findobj(gcf,'tag','rb4'),'Value',1);		elseif get(findobj(gcf,'tag','rb4'),'Value')==1			if ~isempty(PEAK_XPOS),				fred= abs(xpos-PEAK_XPOS);				set(findobj(gcf,'tag','ed7'),'String',num2str(fred));				set(findobj(gcf,'tag','rb4'),'Value',0);				set(findobj(gcf,'tag','rb5'),'Value',1);				PEAK_XPOS=[];			else				PEAK_XPOS= xpos;			end		elseif get(findobj(gcf,'tag','rb5'),'Value')==1			set(findobj(gcf,'tag','ed9'),'String',num2str(xpos));			set(findobj(gcf,'tag','ed10'),'String',num2str(ypos));			set(findobj(gcf,'tag','rb5'),'Value',0);			set(findobj(gcf,'tag','rb6'),'Value',1);		elseif get(findobj(gcf,'tag','rb6'),'Value')==1			if ~isempty(PEAK_XPOS),				fred= abs(xpos-PEAK_XPOS);				set(findobj(gcf,'tag','ed11'),'String',num2str(fred));				set(findobj(gcf,'tag','rb6'),'Value',0);				set(findobj(gcf,'tag','rb7'),'Value',1);				PEAK_XPOS=[];			else				PEAK_XPOS= xpos;			end		elseif get(findobj(gcf,'tag','rb7'),'Value')==1			set(findobj(gcf,'tag','ed13'),'String',num2str(xpos));			set(findobj(gcf,'tag','ed14'),'String',num2str(ypos));			set(findobj(gcf,'tag','rb7'),'Value',0);			set(findobj(gcf,'tag','rb8'),'Value',1);		elseif get(findobj(gcf,'tag','rb8'),'Value')==1			if ~isempty(PEAK_XPOS),				fred= abs(xpos-PEAK_XPOS);				set(findobj(gcf,'tag','ed15'),'String',num2str(fred));				set(findobj(gcf,'tag','rb8'),'Value',0);				set(findobj(gcf,'tag','rb9'),'Value',1);				PEAK_XPOS=[];			else				PEAK_XPOS= xpos;			end		elseif get(findobj(gcf,'tag','rb9'),'Value')==1			set(findobj(gcf,'tag','ed17'),'String',num2str(ypos));			set(findobj(gcf,'tag','fck17'),'Value',0);			set(findobj(gcf,'tag','rb9'),'Value',0);			set(findobj(gcf,'tag','rb10'),'Value',1);			w1=str2num(get(findobj(gcf,'tag','ed3'),'String'));			if isempty(w1),					y1=str2num(get(findobj(gcf,'tag','ed2'),'String'));				set(findobj(gcf,'tag','ed2'),'String',num2str(y1-ypos));			end			w2=str2num(get(findobj(gcf,'tag','ed7'),'String'));			if isempty(w2),					y2=str2num(get(findobj(gcf,'tag','ed6'),'String'));				set(findobj(gcf,'tag','ed6'),'String',num2str(y2-ypos));			end			w3=str2num(get(findobj(gcf,'tag','ed11'),'String'));			if isempty(w3),					y3=str2num(get(findobj(gcf,'tag','ed10'),'String'));				set(findobj(gcf,'tag','ed10'),'String',num2str(y3-ypos));			end			w4=str2num(get(findobj(gcf,'tag','ed15'),'String'));			if isempty(w4),					y4=str2num(get(findobj(gcf,'tag','ed14'),'String'));				set(findobj(gcf,'tag','ed14'),'String',num2str(y4-ypos));			end		elseif get(findobj(gcf,'tag','rb10'),'Value')==1			fred=str2num(get(findobj(gcf,'tag','ed17'),'string'));			mort= (FITX(length(FITX))-FITX(1));			slope= (ypos-fred)/mort;			set(findobj(gcf,'tag','ed18'),'String',num2str(slope));			set(findobj(gcf,'tag','ck18'),'Value',0);		end	elseif strcmp(command,'rb1')		pk_setrb(1);	elseif strcmp(command,'rb2') 		pk_setrb(2);	elseif strcmp(command,'rb3') 		pk_setrb(3);	elseif strcmp(command,'rb4') 		pk_setrb(4);	elseif strcmp(command,'rb5') 		pk_setrb(5);	elseif strcmp(command,'rb6') 		pk_setrb(6);	elseif strcmp(command,'rb7') 		pk_setrb(7);	elseif strcmp(command,'rb8') 		pk_setrb(8);	elseif strcmp(command,'rb9') 		pk_setrb(9);	elseif strcmp(command,'rb10') 		pk_setrb(10);	elseif strcmp(command,'autbut')		data_length=length(FITDY);				% Determine the background and slope		l_bgrnd=mean(FITDY(1:ceil(data_length/10)));		rbg=mean(FITDY(floor(9*data_length/10):data_length));		slope= (rbg-l_bgrnd)/(FITX(length(FITX))-FITX(1));		set(findobj(gcf,'tag','ed17'),'String',num2str(l_bgrnd));		set(findobj(gcf,'tag','ed18'),'String',num2str(slope));				% Determine peakpositions		interval=ceil(data_length/10);		peaks=lclmax(FITDY,interval); 		peak_vector=find(peaks==1);		peak_length=length(peak_vector);		if peak_length>4   % found more than 4 peaks			[Y I]=sort(FITDY(peak_vector));			fred=I(peak_length:-1:peak_length-3,1);			peak_vector=sort(peak_vector(fred));			peak_length=4;		elseif peak_length==0, 	   		return;		end		% Determine the peakwidth		delta_y=FITDY(2:data_length)-FITDY(1:data_length-1);		delta_x=FITX(2:data_length)-FITX(1:data_length-1);		int_diff=delta_y./delta_x;		[y l_peak]=max(int_diff(1:peak_vector(1)-1));		if peak_length~=1			[y r_peak(peak_length)]=min(int_diff(peak_vector(peak_length-1):data_length-1));			r_peak(peak_length)=r_peak(peak_length)+peak_vector(peak_length);			for j=1:peak_length-1				fred=int_diff(peak_vector(j)-1:peak_vector(j+1)-1);				[y index]=min(fred);				r_peak(j)=index+peak_vector(j);				[y index]=max(fred);				l_peak(j+1)=index+peak_vector(j);			end		else			[y r_peak]=min(int_diff(peak_vector(1):data_length-1));			r_peak=r_peak+peak_vector(1);		end		peak_width=FITX(r_peak)-FITX(l_peak);				% Set the values 		for j=1:peak_length			peakpos=FITX(peak_vector(j));			peakheight=FITDY(peak_vector(j))-l_bgrnd-slope*(peakpos-FITX(1));			set(findobj(gcf,'tag',['ed' num2str(4*(j-1)+1)]),'String',num2str(peakpos));			set(findobj(gcf,'tag',['ed' num2str(4*(j-1)+2)]),'String',num2str(peakheight));			set(findobj(gcf,'tag',['ed' num2str(4*(j-1)+3)]),'String',num2str(peak_width(j)));		end	 	peakfit('updbut');   elseif strcmp(command,'updbut')		FIT_LAMBDA=[]; 		for j=1:16,			nogo=strcmp(get(findobj(gcf,'tag',['ed' num2str(j)]),'String'),'');			if nogo & rem(j,4),				if j<4, return; end				FIT_LAMBDA=FIT_LAMBDA(1:j-rem(j,4));				break; 			elseif nogo & ~rem(j,4)				FIT_LAMBDA(j)= 0;			else				FIT_LAMBDA(j)= str2num(get(findobj(gcf,'tag',['ed' num2str(j)]),'String'));			end		end		lam_len=length(FIT_LAMBDA)+2;		FIT_LAMBDA(lam_len-1)= str2num(get(findobj(gcf,'tag','ed17'),'String'));		FIT_LAMBDA(lam_len)= str2num(get(findobj(gcf,'tag','ed18'),'String'));		FITFY=pk_sqvt(FITX,FIT_LAMBDA);			if verbose(3)==1			plot(FITX,FITDY,'+',FITX,FITFY); 		else			semilogy(FITX,FITDY,'+',FITX,FITFY); 		end		npeaks=floor(length(FIT_LAMBDA)/4);		for i=npeaks+1:4			set(findobj(gcf,'tag',['txt' num2str(i)]),'string','');		end			fred= axis;		axis([fred(1) fred(2) 0 fred(4)]);		hold on		col= ['c' 'r' 'g' 'b'];		for i=1:npeaks			base=(i-1)*4;			lam(1:4)= FIT_LAMBDA(base+1:base+4);			f=pk_svoigt(FITX,lam);			FITFY(:,1+i)=f;			if verbose(3)==1				plot(FITX,f,col(i));			else			    semilogy(FITX,f,col(i));			end			area(i)= trapz(FITX,f);			set(findobj(gcf,'tag',['txt' num2str(i)]),'string',num2str(area(i)));		end		total_area= trapz(FITX,FITFY(:,1));		FIT_AREA=[total_area; area.'];		hold off		axis(fred);						endend