function [xpos, peak, sigma, area]=gaussfit(xarray,yarray) %  gaussfit.m %  input:   x-array%           y-array%  output:  xpos%           peak (max y intensity) %           sigma%  functions called:%  leasqr  (the actual fitting routine)%  gauss   (the function)%  dfgauss  (the jacobian of the function)%  Created: 5-Mar-1997 %  Author :  Sean M. Brennan (Bren@SLAC.stanford.edu)%  Modified: 10-Mar-2002%            Todd Hufnagel (hufnage@jhu.edu)%            Also returns area under peak  global verbose% tell leasqr what you want:  verbose(1)= 0;  % Don't print outputverbose(2)= 0;  % Don't plot intermediate resultsverbose(3)= 0;  % Log scaleverbose(4)= 0;  % Don't stop prematurelyxarray= xarray(:);yarray= yarray(:);npts= length(xarray);[peak,index]= max(yarray);   % find peak of yarrayxpos= xarray(index);         % that's the xval, too.% Now find sigmadelta_y=yarray(2:npts)-yarray(1:npts-1);delta_x=xarray(2:npts)-xarray(1:npts-1);int_diff=delta_y./delta_x;[dum l_peak]=max(int_diff(1:index-1));[dum r_peak]=min(int_diff(index:npts-1));r_peak=r_peak+index;sigma=xarray(r_peak)-xarray(l_peak);lambda= [xpos peak sigma];constrain=0.001*ones(3,1);  % only 3 parameters, fit them allwt= ones(npts,1);  % equal weights.  If noisy data, this could be 1/sqrt(yarray) instead[fity,lambdaf,kvg,iter,corp,covp,covr,stdresid,Z,r2]= ...	leasqr(xarray,yarray,lambda,'gauss',.001,50,wt,constrain,'dfgauss');%chi2= sum(((yarray-fity).*wt).^2)/(npts-3);%fprintf('Chisqr= %g\n',chi2);total_area= trapz(xarray,fity);%s= sprintf('Total area= %-8.3g',total_area);plot(xarray,yarray,'o',xarray,fity,'-')xpos= lambdaf(1);peak= lambdaf(2);sigma= lambdaf(3);area=total_area;