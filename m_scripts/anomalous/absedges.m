function myedges= absedges(elem_name)% edges= absedges(elem_name/number)% if no output, type absorption edges & fluorescence lines% for a given element name% 7-JUN-00 SMBab_names= ['K ';'L1';'L2';'L3';'M1';'M2';'M3';'M4';'M5';'N1';'N2'; ...'N3';'N4';'N5'];fl_names= ['Ka2';'Ka1';'Li ';'Le ';'Kb3';'Lb4';'Kb1';'Lb3';'Lb1'; ...'La2';'La1';'Lg3';'Lg1';'Lb2'];zed= element(elem_name);[amu,rho,edges]= atomdata(zed);n= max(find(edges>0));if n> 14, n=14; endedges= 1000 .* edges;result=ones(n,2);if nargout<1,	if n > 2, result(1,:)=[ 1, edges(1)- edges(3)]; end	if n > 3, result(2,:)=[ 2, edges(1)- edges(4)]; end	if n > 4, 		result(3,:)=[ 3, edges(4)- edges(5)]; 		result(4,:)=[ 4, edges(3)- edges(5)]; 	end	if n > 5, 		result(5,:)=[ 5, edges(1)- edges(6)]; 		result(6,:)=[ 6, edges(2)- edges(6)]; 	end	if n > 6, 		result(7,:)=[ 7, edges(1)- edges(7)]; 		result(8,:)=[ 8, edges(2)- edges(7)]; 	end	if n > 7, 		result(9,:)=[ 9, edges(3)- edges(8)]; 		result(10,:)=[ 10, edges(4)- edges(8)]; 	end	if n >  8, result(11,:)=[ 11, edges(4)- edges(9)]; end	if n > 11, result(12,:)=[ 12, edges(2)- edges(12)]; end	if n > 12, result(13,:)=[ 13, edges(3)- edges(13)]; end	if n > 13, result(14,:)=[ 14, edges(4)- edges(14)]; end	[ignore,i]=sort(result(:,2));	new = flipud(result(i,:));	for i=1:n		fprintf('%s %7.1f %s %7.1f\n',ab_names(i,:),edges(i), ...		fl_names(new(i,1),:), new(i,2));	endelse	myedges= edges;end