function [refract_index,mu,rho_ave]= cr8index(energy,rho_t,comps);% [refract_index,mu,rho_ave]= cr8index(energy,rho_t[element/xtal/matl],comps)% Calculate index of refraction, mu [1/microns] and density [gms/cm^3]% for a slab of material.  Inputs: energy[eV];% Density(if not the sum of component densities)[gms/cm^3];% component matrix: 1st column= zed, 2nd column= fraction% if rho_t is a string, expects an element symbol or material file % (comps not required)% 20-FEB-02 SMB% calls to: atomdata.m anomal.m raycomp.m ff_to_mu.m% Copyright 1996-2002 Anneli Munkholm & Sean Brennan.% Stanford Synchrotron Radiation Laboratory% Stanford Linear Accelerator Center, Stanford CA 94309% bren@slac.stanford.eduenergy=energy(:);fpt=0; fppt=0; amu_ave= 0; z_ave= 0; rho_ave= 0; rayt= 0; comptont= 0;if isstr(rho_t),	name=rho_t;	[zed,element_symbol]= element(name);	if zed > 0,		comps(1,1)= zed;		comps(1,2)= 1;		rho_t= 0;		[refract_index,mu,rho_ave]= cr8index(energy,rho_t,comps);	else   % is it an element?    	ifail = rdlat(name);    	if ifail == 0			for ii=1:length(energy),				[cd_strf(ii),thetab,gamma(ii),d_space,rho_ave,vol] = ...					struct_f( 0, 0, 0, energy(ii),293);				refract_index(ii)= sqrt(1-(cd_strf(ii)*gamma(ii)));			end			% 1e4 is conversion from Angstroms to microns			mu = (1e4*2*pi*energy'.*imag(cd_strf).*gamma)/fhc;		else	% try a material??		    [rho_t,comps]=mtl_rd(name);			[refract_index,mu,rho_ave]= cr8index(energy,rho_t,comps);		end	endelse	[m,n]=size(comps);	for j=1:m		% comps(:,1)= zed; comps(:,2)= frac		[amu,rho,edges]=atomdata(comps(j,1));		[fp,fpp]=anomal(comps(j,1),energy);		[ray,compton]= raycomp(comps(j,1),energy);		fpt= fpt+ fp* comps(j,2);		fppt=fppt+ fpp* comps(j,2);		rayt= rayt+ ray* comps(j,2);		comptont= comptont+ compton* comps(j,2);		amu_ave= amu_ave+ amu* comps(j,2);		z_ave= z_ave+ comps(j,1)* comps(j,2);		rho_ave= rho_ave+ rho* comps(j,2);	end	if rho_t ~= 0,rho_ave= rho_t; end	% See IV, p111 for how this constant is derived	constant= 415.181* rho_ave./(energy.^2 * amu_ave);	alpha= 1- (constant.* ( z_ave+ fpt));	% Both fpp and compton are "absorptive", i.e. imaginary terms.	beta= constant.* (fppt+ comptont);	refract_index= alpha-beta*i;	% For the attenuation length all three are necessary	mu= (ff_to_mu* rho_ave*( fppt+ rayt+ comptont))./( amu_ave* energy);end